package br.com.acolhimento.domain;
// Generated 30/10/2018 15:29:30 by Hibernate Tools 5.2.11.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Encaminhamento generated by hbm2java
 */
@Entity
@Table(name = "encaminhamento", catalog = "acolhimento")
public class Encaminhamento implements java.io.Serializable {

	private Integer idEnc;
	private Endereco endereco;
	private Funcionario funcionario;
	private Usuario usuario;
	private String tipoEnc;
	private String localEnc;
	private String statusEnc;
	private Date dataEnc;

	public Encaminhamento() {
	}

	public Encaminhamento(Endereco endereco, Funcionario funcionario, Usuario usuario, String tipoEnc) {
		this.endereco = endereco;
		this.funcionario = funcionario;
		this.usuario = usuario;
		this.tipoEnc = tipoEnc;
	}

	public Encaminhamento(Endereco endereco, Funcionario funcionario, Usuario usuario, String tipoEnc, String localEnc,
			String statusEnc, Date dataEnc) {
		this.endereco = endereco;
		this.funcionario = funcionario;
		this.usuario = usuario;
		this.tipoEnc = tipoEnc;
		this.localEnc = localEnc;
		this.statusEnc = statusEnc;
		this.dataEnc = dataEnc;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idEnc", unique = true, nullable = false)
	public Integer getIdEnc() {
		return this.idEnc;
	}

	public void setIdEnc(Integer idEnc) {
		this.idEnc = idEnc;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idEndereco", nullable = false)
	public Endereco getEndereco() {
		return this.endereco;
	}

	public void setEndereco(Endereco endereco) {
		this.endereco = endereco;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cpfFunc", nullable = false)
	public Funcionario getFuncionario() {
		return this.funcionario;
	}

	public void setFuncionario(Funcionario funcionario) {
		this.funcionario = funcionario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "nProntuarioUsu", nullable = false)
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@Column(name = "tipoEnc", nullable = false, length = 40)
	public String getTipoEnc() {
		return this.tipoEnc;
	}

	public void setTipoEnc(String tipoEnc) {
		this.tipoEnc = tipoEnc;
	}

	@Column(name = "localEnc", length = 50)
	public String getLocalEnc() {
		return this.localEnc;
	}

	public void setLocalEnc(String localEnc) {
		this.localEnc = localEnc;
	}

	@Column(name = "statusEnc", length = 20)
	public String getStatusEnc() {
		return this.statusEnc;
	}

	public void setStatusEnc(String statusEnc) {
		this.statusEnc = statusEnc;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dataEnc", length = 10)
	public Date getDataEnc() {
		return this.dataEnc;
	}

	public void setDataEnc(Date dataEnc) {
		this.dataEnc = dataEnc;
	}

}
