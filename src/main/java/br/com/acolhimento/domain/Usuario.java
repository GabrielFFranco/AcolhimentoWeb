package br.com.acolhimento.domain;
// Generated 30/10/2018 15:29:30 by Hibernate Tools 5.2.11.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "usuario", catalog = "acolhimento")
public class Usuario implements java.io.Serializable {

	private Integer nprontuarioUsu;
	private Endereco endereco;
	private Funcionario funcionarioByAtendidoPeloFunc;
	private Funcionario funcionarioByCpfFunc;
	private String tipoUsu;
	private Date dataCadastroUsu;
	private String nomeUsu;
	private String statusUsu;
	private String sexoUsu;
	private Date dataNascUsu;
	private String tipoDoc;
	private String documentoUsu;
	private String cidadeOrigemUsu;
	private String parecerTecnicoUsu;
	private String drogasUsadasUsu;
	private String situacao;
	private String ultimaCidade;
	private String cidadeDestino;
	private Date dataDeEntrada;
	private Date dataDeSaida;
	private Set<Chamada> chamadas = new HashSet<Chamada>(0);
	private Set<Encaminhamento> encaminhamentos = new HashSet<Encaminhamento>(0);

	public Usuario() {
	}

	public Usuario(Funcionario funcionarioByAtendidoPeloFunc, String tipoUsu, Date dataCadastroUsu, String nomeUsu,
			String statusUsu, String sexoUsu, String tipoDoc) {
		this.funcionarioByAtendidoPeloFunc = funcionarioByAtendidoPeloFunc;
		this.tipoUsu = tipoUsu;
		this.dataCadastroUsu = dataCadastroUsu;
		this.nomeUsu = nomeUsu;
		this.statusUsu = statusUsu;
		this.sexoUsu = sexoUsu;
		this.tipoDoc = tipoDoc;
	}

	public Usuario(Endereco endereco, Funcionario funcionarioByAtendidoPeloFunc, Funcionario funcionarioByCpfFunc,
			String tipoUsu, Date dataCadastroUsu, String nomeUsu, String statusUsu, String sexoUsu, Date dataNascUsu,
			String tipoDoc, String documentoUsu, String cidadeOrigemUsu, String parecerTecnicoUsu,
			String drogasUsadasUsu, String situacao, String ultimaCidade, String cidadeDestino, Date dataDeEntrada,
			Date dataDeSaida, Set<Chamada> chamadas, Set<Encaminhamento> encaminhamentos) {
		this.endereco = endereco;
		this.funcionarioByAtendidoPeloFunc = funcionarioByAtendidoPeloFunc;
		this.funcionarioByCpfFunc = funcionarioByCpfFunc;
		this.tipoUsu = tipoUsu;
		this.dataCadastroUsu = dataCadastroUsu;
		this.nomeUsu = nomeUsu;
		this.statusUsu = statusUsu;
		this.sexoUsu = sexoUsu;
		this.dataNascUsu = dataNascUsu;
		this.tipoDoc = tipoDoc;
		this.documentoUsu = documentoUsu;
		this.cidadeOrigemUsu = cidadeOrigemUsu;
		this.parecerTecnicoUsu = parecerTecnicoUsu;
		this.drogasUsadasUsu = drogasUsadasUsu;
		this.situacao = situacao;
		this.ultimaCidade = ultimaCidade;
		this.cidadeDestino = cidadeDestino;
		this.dataDeEntrada = dataDeEntrada;
		this.dataDeSaida = dataDeSaida;
		this.chamadas = chamadas;
		this.encaminhamentos = encaminhamentos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "nProntuarioUsu", unique = true, nullable = false)
	public Integer getNprontuarioUsu() {
		return this.nprontuarioUsu;
	}

	public void setNprontuarioUsu(Integer nprontuarioUsu) {
		this.nprontuarioUsu = nprontuarioUsu;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idEndereco")
	public Endereco getEndereco() {
		return this.endereco;
	}

	public void setEndereco(Endereco endereco) {
		this.endereco = endereco;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "atendidoPeloFunc", nullable = false)
	public Funcionario getFuncionarioByAtendidoPeloFunc() {
		return this.funcionarioByAtendidoPeloFunc;
	}

	public void setFuncionarioByAtendidoPeloFunc(Funcionario funcionarioByAtendidoPeloFunc) {
		this.funcionarioByAtendidoPeloFunc = funcionarioByAtendidoPeloFunc;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cpfFunc")
	public Funcionario getFuncionarioByCpfFunc() {
		return this.funcionarioByCpfFunc;
	}

	public void setFuncionarioByCpfFunc(Funcionario funcionarioByCpfFunc) {
		this.funcionarioByCpfFunc = funcionarioByCpfFunc;
	}

	@Column(name = "tipoUsu", nullable = false, length = 10)
	public String getTipoUsu() {
		return this.tipoUsu;
	}

	public void setTipoUsu(String tipoUsu) {
		this.tipoUsu = tipoUsu;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dataCadastroUsu", nullable = false, length = 10)
	public Date getDataCadastroUsu() {
		return this.dataCadastroUsu;
	}

	public void setDataCadastroUsu(Date dataCadastroUsu) {
		this.dataCadastroUsu = dataCadastroUsu;
	}

	@Column(name = "nomeUsu", nullable = false, length = 30)
	public String getNomeUsu() {
		return this.nomeUsu;
	}

	public void setNomeUsu(String nomeUsu) {
		this.nomeUsu = nomeUsu;
	}

	@Column(name = "statusUsu", nullable = false, length = 10)
	public String getStatusUsu() {
		return this.statusUsu;
	}

	public void setStatusUsu(String statusUsu) {
		this.statusUsu = statusUsu;
	}

	@Column(name = "sexoUsu", nullable = false, length = 10)
	public String getSexoUsu() {
		return this.sexoUsu;
	}

	public void setSexoUsu(String sexoUsu) {
		this.sexoUsu = sexoUsu;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dataNascUsu", length = 10)
	public Date getDataNascUsu() {
		return this.dataNascUsu;
	}

	public void setDataNascUsu(Date dataNascUsu) {
		this.dataNascUsu = dataNascUsu;
	}

	@Column(name = "tipoDoc", nullable = false, length = 10)
	public String getTipoDoc() {
		return this.tipoDoc;
	}

	public void setTipoDoc(String tipoDoc) {
		this.tipoDoc = tipoDoc;
	}

	@Column(name = "documentoUsu", length = 50)
	public String getDocumentoUsu() {
		return this.documentoUsu;
	}

	public void setDocumentoUsu(String documentoUsu) {
		this.documentoUsu = documentoUsu;
	}

	@Column(name = "cidadeOrigemUsu", length = 30)
	public String getCidadeOrigemUsu() {
		return this.cidadeOrigemUsu;
	}

	public void setCidadeOrigemUsu(String cidadeOrigemUsu) {
		this.cidadeOrigemUsu = cidadeOrigemUsu;
	}

	@Column(name = "parecerTecnicoUsu", length = 200)
	public String getParecerTecnicoUsu() {
		return this.parecerTecnicoUsu;
	}

	public void setParecerTecnicoUsu(String parecerTecnicoUsu) {
		this.parecerTecnicoUsu = parecerTecnicoUsu;
	}

	@Column(name = "drogasUsadasUsu", length = 100)
	public String getDrogasUsadasUsu() {
		return this.drogasUsadasUsu;
	}

	public void setDrogasUsadasUsu(String drogasUsadasUsu) {
		this.drogasUsadasUsu = drogasUsadasUsu;
	}

	@Column(name = "situacao", length = 20)
	public String getSituacao() {
		return this.situacao;
	}

	public void setSituacao(String situacao) {
		this.situacao = situacao;
	}

	@Column(name = "ultimaCidade", length = 30)
	public String getUltimaCidade() {
		return this.ultimaCidade;
	}

	public void setUltimaCidade(String ultimaCidade) {
		this.ultimaCidade = ultimaCidade;
	}

	@Column(name = "cidadeDestino", length = 30)
	public String getCidadeDestino() {
		return this.cidadeDestino;
	}

	public void setCidadeDestino(String cidadeDestino) {
		this.cidadeDestino = cidadeDestino;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dataDeEntrada", length = 10)
	public Date getDataDeEntrada() {
		return this.dataDeEntrada;
	}

	public void setDataDeEntrada(Date dataDeEntrada) {
		this.dataDeEntrada = dataDeEntrada;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dataDeSaida", length = 10)
	public Date getDataDeSaida() {
		return this.dataDeSaida;
	}

	public void setDataDeSaida(Date dataDeSaida) {
		this.dataDeSaida = dataDeSaida;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Chamada> getChamadas() {
		return this.chamadas;
	}

	public void setChamadas(Set<Chamada> chamadas) {
		this.chamadas = chamadas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Encaminhamento> getEncaminhamentos() {
		return this.encaminhamentos;
	}

	public void setEncaminhamentos(Set<Encaminhamento> encaminhamentos) {
		this.encaminhamentos = encaminhamentos;
	}

}
